{
    "openapi": "3.0.0",
    "info": {
        "title": "Wildfitter",
        "description": "This is the new wildfitter api",
        "contact": {
            "email": "aleksa.gavrilovic@guidefitter.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "2.0.0"
    },
    "servers": [
        {
            "url": "https://aleksa-new-api.wildfitter.com",
            "description": "Wildfitter doc test server"
        }
    ],
    "paths": {
        "/brands": {
            "get": {
                "summary": "Get Brands",
                "description": "You can use `/users` endpoint to retrieve a list of users, you can also use parameters to filter the list. Sort order is ignored when the `q` parameter is set, and instead results are sorted by match relevance.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/gop"
                    },
                    {
                        "$ref": "#/components/parameters/gop-channel"
                    },
                    {
                        "$ref": "#/components/parameters/gop-shop"
                    },
                    {
                        "$ref": "#/components/parameters/gop-phylum"
                    },
                    {
                        "$ref": "#/components/parameters/idp"
                    },
                    {
                        "$ref": "#/components/parameters/idp-channel"
                    },
                    {
                        "$ref": "#/components/parameters/idp-shop"
                    },
                    {
                        "$ref": "#/components/parameters/cnp"
                    },
                    {
                        "$ref": "#/components/parameters/cnp-channel"
                    },
                    {
                        "$ref": "#/components/parameters/cnp-shop"
                    },
                    {
                        "$ref": "#/components/parameters/oep"
                    },
                    {
                        "$ref": "#/components/parameters/oep-channel"
                    },
                    {
                        "$ref": "#/components/parameters/oep-shop"
                    },
                    {
                        "$ref": "#/components/parameters/mip"
                    },
                    {
                        "$ref": "#/components/parameters/mip-channel"
                    },
                    {
                        "$ref": "#/components/parameters/mip-shop"
                    },
                    {
                        "$ref": "#/components/parameters/mip-phylum"
                    },
                    {
                        "$ref": "#/components/parameters/frp"
                    },
                    {
                        "$ref": "#/components/parameters/frp-channel"
                    },
                    {
                        "$ref": "#/components/parameters/frp-shop"
                    },
                    {
                        "$ref": "#/components/parameters/frp-phylum"
                    },
                    {
                        "$ref": "#/components/parameters/ecp"
                    },
                    {
                        "$ref": "#/components/parameters/ecp-channel"
                    },
                    {
                        "$ref": "#/components/parameters/ecp-shop"
                    },
                    {
                        "$ref": "#/components/parameters/ecp-phylum"
                    },
                    {
                        "$ref": "#/components/parameters/rtp"
                    },
                    {
                        "$ref": "#/components/parameters/rtp-channel"
                    },
                    {
                        "$ref": "#/components/parameters/rtp-shop"
                    },
                    {
                        "$ref": "#/components/parameters/rtp-phylum"
                    },
                    {
                        "$ref": "#/components/parameters/prostaff"
                    },
                    {
                        "$ref": "#/components/parameters/prostaff-shop"
                    },
                    {
                        "$ref": "#/components/parameters/aim"
                    },
                    {
                        "$ref": "#/components/parameters/aim-shop"
                    },
                    {
                        "$ref": "#/components/parameters/categories"
                    },
                    {
                        "$ref": "#/components/parameters/corporate-domain"
                    },
                    {
                        "$ref": "#/components/parameters/has-domain"
                    },
                    {
                        "$ref": "#/components/parameters/has-grid-access"
                    },
                    {
                        "$ref": "#/components/parameters/parent"
                    },
                    {
                        "name": "profile-status",
                        "in": "query",
                        "description": "The status of the profile (online/offline/any) (online by default)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "deleted",
                        "in": "query",
                        "description": "Include soft deleted profiles in the search (yes/no/any) (no by default)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "location",
                        "in": "query",
                        "description": "Filter by country or state. The Geoname ID of the GeoEntities separated by commas, or '0' to filter those without a location.<br> Also those values are possible 'midwest', 'south', 'east', 'west'",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get"
                    }
                }
            },
            "post": {
                "summary": "Create Brand",
                "requestBody": {
                    "description": "The user object that will be added.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "The Guidefitter Profile name of the brand",
                                        "type": "string"
                                    },
                                    "brand_name": {
                                        "description": "The name of the brand",
                                        "type": "string"
                                    },
                                    "grid_enabled": {
                                        "description": "Enable/disable the grid capabilities of that brand + show programs in cockpit (only admins)",
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "with": {
                                        "description": "The extra fields you want in the returned JSON",
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Brand created"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "summary": "Get Users",
                "description": "You can use `/users` endpoint to retrieve a list of users, you can also use parameters to filter the list. Sort order is ignored when the `q` parameter is set, and instead results are sorted by match relevance.",
                "operationId": "App\\Controller\\User\\UserController::getUsersAction",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/has-profile-photo"
                    },
                    {
                        "$ref": "#/components/parameters/has-claim"
                    },
                    {
                        "$ref": "#/components/parameters/insider-category"
                    },
                    {
                        "$ref": "#/components/parameters/phylum"
                    },
                    {
                        "$ref": "#/components/parameters/is-verified-insider"
                    },
                    {
                        "$ref": "#/components/parameters/is-dod-verified"
                    },
                    {
                        "$ref": "#/components/parameters/profile-verification"
                    },
                    {
                        "$ref": "#/components/parameters/profile-verification-before"
                    },
                    {
                        "$ref": "#/components/parameters/profile-verification-after"
                    },
                    {
                        "$ref": "#/components/parameters/subscriptions"
                    },
                    {
                        "$ref": "#/components/parameters/orders"
                    },
                    {
                        "$ref": "#/components/parameters/brands"
                    },
                    {
                        "$ref": "#/components/parameters/is-manager"
                    },
                    {
                        "$ref": "#/components/parameters/has-pending-document"
                    },
                    {
                        "$ref": "#/components/parameters/has-experience"
                    },
                    {
                        "$ref": "#/components/parameters/is-email-verified"
                    },
                    {
                        "$ref": "#/components/parameters/brag-app"
                    },
                    {
                        "$ref": "#/components/parameters/business-app"
                    },
                    {
                        "$ref": "#/components/parameters/notifications"
                    },
                    {
                        "$ref": "#/components/parameters/following"
                    },
                    {
                        "$ref": "#/components/parameters/is-admin"
                    },
                    {
                        "$ref": "#/components/parameters/is-prostaff"
                    },
                    {
                        "$ref": "#/components/parameters/is-activated-insider"
                    },
                    {
                        "$ref": "#/components/parameters/is-ghost"
                    },
                    {
                        "$ref": "#/components/parameters/has-review"
                    },
                    {
                        "$ref": "#/components/parameters/has-names"
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "The extra fields you want in the returned JSON.",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get"
                    }
                }
            },
            "put": {
                "summary": "Update User",
                "description": "",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "Id of the user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The user object that will be updated.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "(Required) The user's Profile name (that'll be his Guidefitter URL)",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "(Required) User's email address",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "(Required) The password",
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "password2": {
                                        "description": "(Required) The password confirmation",
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "first_name": {
                                        "description": "The user's first name",
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "description": "The user's last name",
                                        "type": "string"
                                    },
                                    "guidefitter": {
                                        "description": "The ID of an outfitter if the lead token comes from an outfitter claiming a business to answer the lead",
                                        "type": "integer"
                                    },
                                    "token": {
                                        "description": "An invitation token. User creating account comes form an invite.",
                                        "type": "string"
                                    },
                                    "insider_category": {
                                        "description": "Flag a member as a potential Insider",
                                        "type": "integer"
                                    },
                                    "city": {
                                        "description": "User's address city (AddressJson)",
                                        "type": "string"
                                    },
                                    "state": {
                                        "description": "User's address state (geoname ID)",
                                        "type": "integer"
                                    },
                                    "country": {
                                        "description": "User's address country (geoname ID)",
                                        "type": "integer"
                                    },
                                    "street1": {
                                        "description": "User's address line 1",
                                        "type": "string"
                                    },
                                    "street2": {
                                        "description": "User's address line 2",
                                        "type": "string"
                                    },
                                    "zip": {
                                        "description": "User's address ZIP code",
                                        "type": "string"
                                    },
                                    "with": {
                                        "description": "The extra fields you want in the returned JSON",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created"
                    }
                }
            },
            "post": {
                "summary": "Create User",
                "description": "",
                "requestBody": {
                    "description": "The user object that will be added.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "(Required) The user's Profile name (that'll be his Guidefitter URL)",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "(Required) User's email address",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "(Required) The password",
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "password2": {
                                        "description": "(Required) The password confirmation",
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "first_name": {
                                        "description": "The user's first name",
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "description": "The user's last name",
                                        "type": "string"
                                    },
                                    "guidefitter": {
                                        "description": "The ID of an outfitter if the lead token comes from an outfitter claiming a business to answer the lead",
                                        "type": "integer"
                                    },
                                    "token": {
                                        "description": "An invitation token. User creating account comes form an invite.",
                                        "type": "string"
                                    },
                                    "insider_category": {
                                        "description": "Flag a member as a potential Insider",
                                        "type": "integer"
                                    },
                                    "city": {
                                        "description": "User's address city (AddressJson)",
                                        "type": "string"
                                    },
                                    "state": {
                                        "description": "User's address state (geoname ID)",
                                        "type": "integer"
                                    },
                                    "country": {
                                        "description": "User's address country (geoname ID)",
                                        "type": "integer"
                                    },
                                    "street1": {
                                        "description": "User's address line 1",
                                        "type": "string"
                                    },
                                    "street2": {
                                        "description": "User's address line 2",
                                        "type": "string"
                                    },
                                    "zip": {
                                        "description": "User's address ZIP code",
                                        "type": "string"
                                    },
                                    "with": {
                                        "description": "The extra fields you want in the returned JSON",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created"
                    }
                }
            },
            "delete": {
                "summary": "Delete User",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "Id of the user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "hard",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "To hard-delete the user and all its related entities",
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted."
                    }
                }
            }
        },
        "/users/name": {
            "get": {
                "summary": "Get Single User - Name",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The username to search by",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/user"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/profile=profileId": {
            "get": {
                "summary": "Get Single User - Profile",
                "parameters": [
                    {
                        "name": "profileId",
                        "in": "path",
                        "description": "The Profile Id to search by",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/user"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/email=email": {
            "get": {
                "summary": "Get Single User - Email",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "The email to search by",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/user"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/fbid=fbid": {
            "get": {
                "summary": "Get Single User - Facebook",
                "parameters": [
                    {
                        "name": "fbid",
                        "in": "path",
                        "description": "The Facebook Id to search by",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/user"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/magento=magentoId": {
            "get": {
                "summary": "Get Single User - Magento",
                "parameters": [
                    {
                        "name": "magentoId",
                        "in": "path",
                        "description": "The Magento Id to search by",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/user"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/userId": {
            "get": {
                "summary": "Get Single User - UserId",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The userId to search by",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/user"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/me": {
            "put": {
                "summary": "Update User - Magento",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "The user's email.",
                            "type": "string"
                        }
                    },
                    {
                        "name": "first_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "The user's first name.",
                            "type": "string"
                        }
                    },
                    {
                        "name": "last_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "The user's last name.",
                            "type": "string"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "description": "The extra fields you want in the returned JSON",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated"
                    },
                    "204": {
                        "description": "Nothing to update"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "profile": {
                "properties": {
                    "id": {
                        "description": "Profile ID",
                        "type": "integer"
                    },
                    "isActive": {
                        "description": "Profile is online/offline",
                        "type": "boolean"
                    },
                    "type": {
                        "description": "Profile Type (1=ProfileStandard, 2=ProfileBusiness, 3=ProfileVendor)",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Profile name (the Guidefitter URL of the profile)",
                        "type": "string"
                    },
                    "canRename": {
                        "description": "Can that profile name be changed still?\nAdmin can rename as much as they want though.\nACL_PRIVATE",
                        "type": "boolean"
                    },
                    "avatar": {
                        "description": "Photo of the profile avatar"
                    },
                    "updatedOn": {
                        "description": "ISO date of the last profile update",
                        "type": "string"
                    },
                    "createdOn": {
                        "description": "ISO date when the profile was created",
                        "type": "string"
                    },
                    "notifications": {
                        "title": "notifications",
                        "description": "The list of notifications the profile is subscribed to\nACL_PRIVATE\n(with=REQ_PROFILE_NOTIFICATIONS)",
                        "type": "array",
                        "default": "[]"
                    },
                    "unreadCount": {
                        "description": "Get the number of thread messages (conversations) not read. Must be authenticated.",
                        "type": "integer"
                    },
                    "deletedOn": {
                        "description": "ISO date when the profile was soft-deleted\nACL_PRIVATE",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "user": {
                "properties": {
                    "type": {
                        "description": "Descriminator: the type of entity (u: user, o: outfitter, b: brand, a: association, v: vendor, c: customer)",
                        "type": "string"
                    },
                    "id": {
                        "description": "User ID",
                        "type": "integer"
                    },
                    "isGhost": {
                        "description": "Ghost user (not registered to GF)",
                        "type": "boolean"
                    },
                    "firstName": {
                        "description": "First Name",
                        "type": "string"
                    },
                    "lastName": {
                        "description": "Last Name",
                        "type": "string"
                    },
                    "profile": {
                        "$ref": "#/components/schemas/profile"
                    },
                    "unreadCount": {
                        "description": "Get the number of thread messages (conversations) not read. Must be authenticated.",
                        "type": "integer"
                    },
                    "email": {
                        "description": "User email\nACL_PRIVATE",
                        "type": "string"
                    },
                    "isEmailVerified": {
                        "description": "User email has been verified\nACL_PRIVATE",
                        "type": "boolean"
                    },
                    "createdOn": {
                        "description": "Account creation date",
                        "type": "string"
                    },
                    "magentoId": {
                        "description": "The magento ID of that user\nACL_PRIVATE",
                        "type": "integer"
                    },
                    "zendeskId": {
                        "description": "The Zendesk ID of that user\nACL_PRIVATE",
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "parameters": {
            "gop": {
                "name": "gop",
                "in": "query",
                "description": "GOP filter: 0=offline, 1=coming soon, 2=online, 3=featured",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "gop-channel": {
                "name": "gop-channel",
                "in": "query",
                "description": "GOP Channel filter: shop, code, dealer",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "gop-shop": {
                "name": "gop-shop",
                "in": "query",
                "description": "GOP Shop filter: 0=none, 1=created, 2=online",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "gop-phylum": {
                "name": "gop-phylum",
                "in": "query",
                "description": "Filter on GOP restriction phylum",
                "required": false,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "idp": {
                "name": "idp",
                "in": "query",
                "description": "IDP filter: 0=offline, 1=coming soon, 2=online",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "idp-channel": {
                "name": "idp-channel",
                "in": "query",
                "description": "IDP Channel filter: shop, code, dealer",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "idp-shop": {
                "name": "idp-shop",
                "in": "query",
                "description": "IDP Shop filter: 0=none, 1=created, 2=online",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "cnp": {
                "name": "cnp",
                "in": "query",
                "description": "CNP filter: 0=offline, 1=coming soon, 2=online",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "cnp-channel": {
                "name": "cnp-channel",
                "in": "query",
                "description": "CNP Channel filter: shop, code, dealer",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "cnp-shop": {
                "name": "cnp-shop",
                "in": "query",
                "description": "CNP Shop filter: 0=none, 1=created, 2=online",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "oep": {
                "name": "oep",
                "in": "query",
                "description": "OEP filter: 0=offline, 1=coming soon, 2=online",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "oep-channel": {
                "name": "oep-channel",
                "in": "query",
                "description": "OEP Channel filter: shop, code, dealer",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "oep-shop": {
                "name": "oep-shop",
                "in": "query",
                "description": "OEP Shop filter: 0=none, 1=created, 2=online",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "mip": {
                "name": "mip",
                "in": "query",
                "description": "MIP filter: 0=offline, 1=coming soon, 2=online",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "mip-channel": {
                "name": "mip-channel",
                "in": "query",
                "description": "MIP Channel filter: shop, code, dealer",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "mip-shop": {
                "name": "mip-shop",
                "in": "query",
                "description": "MIP Shop filter: 0=none, 1=created, 2=online",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "mip-phylum": {
                "name": "mip-phylum",
                "in": "query",
                "description": "Filter on MIP restriction phylum",
                "required": false,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "frp": {
                "name": "frp",
                "in": "query",
                "description": "FRP filter: 0=offline, 1=coming soon, 2=online",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "frp-channel": {
                "name": "frp-channel",
                "in": "query",
                "description": "FRP Channel filter: shop, code, dealer",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "frp-shop": {
                "name": "frp-shop",
                "in": "query",
                "description": "RTP Channel filter: shop, code, dealer",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "frp-phylum": {
                "name": "frp-phylum",
                "in": "query",
                "description": "Filter on FRP restriction phylum",
                "required": false,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "ecp": {
                "name": "ecp",
                "in": "query",
                "description": "ECP filter: 0=offline, 1=coming soon, 2=online",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "ecp-channel": {
                "name": "ecp-channel",
                "in": "query",
                "description": "ECP Channel filter: shop, code, dealer",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "ecp-shop": {
                "name": "ecp-shop",
                "in": "query",
                "description": "ECP Shop filter: 0=none, 1=created, 2=online",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "ecp-phylum": {
                "name": "ecp-phylum",
                "in": "query",
                "description": "Filter on ECP restriction phylum",
                "required": false,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "rtp": {
                "name": "rtp",
                "in": "query",
                "description": "RTP filter: 0=offline, 1=coming soon, 2=online",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "rtp-channel": {
                "name": "rtp-channel",
                "in": "query",
                "description": "RTP Channel filter: shop, code, dealer",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "rtp-shop": {
                "name": "rtp-shop",
                "in": "query",
                "description": "RTP Shop filter: 0=none, 1=created, 2=online",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "rtp-phylum": {
                "name": "rtp-phylum",
                "in": "query",
                "description": "Filter on RTP restriction phylum",
                "required": false,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "prostaff": {
                "name": "prostaff",
                "in": "query",
                "description": "Prostaff status filter: 0=locked, 1=closed, 2=opened",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "prostaff-shop": {
                "name": "prostaff-shop",
                "in": "query",
                "description": "Prostaff Shop filter: 0=none, 1=created, 2=online",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "aim": {
                "name": "aim",
                "in": "query",
                "description": "AIM status filter: 0=locked, 1=closed, 2=opened",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "aim-shop": {
                "name": "aim-shop",
                "in": "query",
                "description": "AIM Shop filter: 0=none, 1=created, 2=online",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "categories": {
                "name": "categories",
                "in": "query",
                "description": "Gear categories IDs separated by commas",
                "required": false,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "corporate-domain": {
                "name": "corporate-domain",
                "in": "query",
                "description": "The email domain of the company (including @)",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "has-domain": {
                "name": "has-domain",
                "in": "query",
                "description": "Filter brands depending if they have one or more corporate domains set",
                "required": false,
                "schema": {
                    "type": "boolean"
                }
            },
            "has-grid-access": {
                "name": "has-grid-access",
                "in": "query",
                "description": "Filter brands depending on their gris access status",
                "required": false,
                "schema": {
                    "type": "boolean"
                }
            },
            "parent": {
                "name": "parent",
                "in": "query",
                "description": "Parent status: 1=is parent, 2=has parent",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "has-profile-photo": {
                "name": "has-profile-photo",
                "in": "query",
                "description": "Filter users who have a profile photo",
                "required": false,
                "schema": {
                    "type": "boolean",
                    "default": false
                }
            },
            "has-claim": {
                "name": "has-claim",
                "in": "query",
                "description": "Filter users who claimed a business profile",
                "required": false,
                "schema": {
                    "type": "boolean",
                    "default": false
                }
            },
            "insider-category": {
                "name": "insider-category",
                "in": "query",
                "description": "Filters users based on insider category (0=NONE, 1=PRO, 2=INDUSTRY, 3=MILITARY, 4=FIRST RESPONDER, 5=GOVERNMENT, 6=NGO)",
                "required": false,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "default": []
                    }
                }
            },
            "phylum": {
                "name": "phylum",
                "in": "query",
                "description": "Filter on phylum from active insider verification",
                "required": false,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "default": []
                    }
                }
            },
            "is-verified-insider": {
                "name": "is-verified-insider",
                "in": "query",
                "description": "Insider status. If TRUE filter only verified insiders, if FALSE only the flagged insiders.",
                "required": false,
                "schema": {
                    "type": "boolean",
                    "default": false
                }
            },
            "is-dod-verified": {
                "name": "is-dod-verified",
                "in": "query",
                "description": "If TRUE filter users with active verification verified through the DoD service.",
                "required": false,
                "schema": {
                    "type": "boolean",
                    "default": false
                }
            },
            "profile-verification": {
                "name": "profile-verification",
                "in": "query",
                "description": "Filters users based on profile verification status\n     *      (none=99,\n     *      pending=1,\n     *      accepted=2,\n     *      refused=3,\n     *      in progress=4,\n     *      not yet in progress=5,\n     *      expiring=6,\n     *      expired=7,\n     *      in grace period=8,\n     *      out of grace period=9,\n     *      in limbo=10,\n     *      incomplete=11).",
                "required": false,
                "schema": {
                    "type": "integer",
                    "default": false
                }
            },
            "profile-verification-before": {
                "name": "profile-verification-before",
                "in": "query",
                "description": "Filter profile verification BEFORE that date (which date depends of profile-verification filter)",
                "required": false,
                "schema": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "profile-verification-after": {
                "name": "profile-verification-after",
                "in": "query",
                "description": "If TRUE filter users with active verification verified through the DoD service.",
                "required": false,
                "schema": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "subscriptions": {
                "name": "subscriptions",
                "in": "query",
                "description": "Filter users based on their subscriptions to Insider Programs ('none', 'one', 'few', 'lots', 'pending')",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "orders": {
                "name": "orders",
                "in": "query",
                "description": "Filter users based on the number of orders ('none', 'one', 'few', 'lots')",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "brands": {
                "name": "brands",
                "in": "query",
                "description": "Filter users that are members of those brand programs.",
                "required": false,
                "schema": {
                    "description": "List of brand IDs separated by commas",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "default": []
                    }
                }
            },
            "is-manager": {
                "name": "is-manager",
                "in": "query",
                "description": "Filter users that manages a business or vendor profile",
                "required": false,
                "schema": {
                    "type": "boolean",
                    "default": false
                }
            },
            "has-pending-document": {
                "name": "has-pending-document",
                "in": "query",
                "description": "Filter users who have a Profile Verification document not yet verified by admins",
                "required": false,
                "schema": {
                    "type": "boolean",
                    "default": false
                }
            },
            "has-experience": {
                "name": "has-experience",
                "in": "query",
                "description": "Filter users who have or haven't a work experience",
                "required": false,
                "schema": {
                    "type": "boolean",
                    "default": false
                }
            },
            "is-email-verified": {
                "name": "is-email-verified",
                "in": "query",
                "description": "Filter users who have their PERSONAL email verified or not (TRUE=verified, FALSE=unverified, NULL=ignored)",
                "required": false,
                "schema": {
                    "type": "boolean",
                    "default": false
                }
            },
            "brag-app": {
                "name": "brag-app",
                "in": "query",
                "description": "Filter users that have installed the brag app (0=not brag app user, 1=brag app user, 11=iOS user, 12=Android user)",
                "required": false,
                "schema": {
                    "type": "integer",
                    "default": 0
                }
            },
            "business-app": {
                "name": "business-app",
                "in": "query",
                "description": "Filter users that have installed the business app (0=not business app user, 1=business app user, 11=iOS user, 12=Android user)",
                "required": false,
                "schema": {
                    "type": "integer",
                    "default": 0
                }
            },
            "notifications": {
                "name": "notifications",
                "in": "query",
                "description": "Filter users that are subscribed to any of the given notifications.",
                "required": false,
                "schema": {
                    "description": "List of notificaton IDs separated by commas",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "default": []
                    }
                }
            },
            "following": {
                "name": "following",
                "in": "query",
                "description": "Filter users that are following these profiles.",
                "required": false,
                "schema": {
                    "description": "List of profile IDs separated by commas",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "default": []
                    }
                }
            },
            "is-admin": {
                "name": "is-admin",
                "in": "query",
                "description": "Filter users who are GF admins or not (TRUE=admin, FALSE=not admin, NULL=ignored).",
                "required": false,
                "schema": {
                    "type": "boolean",
                    "default": false
                }
            },
            "is-prostaff": {
                "name": "is-prostaff",
                "in": "query",
                "description": "Filter users that are in pro staff of at least 1 brand.",
                "required": false,
                "schema": {
                    "type": "boolean",
                    "default": false
                }
            },
            "is-activated-insider": {
                "name": "is-activated-insider",
                "in": "query",
                "description": "Filter users that are activated insider for at least 1 brand.",
                "required": false,
                "schema": {
                    "type": "boolean",
                    "default": false
                }
            },
            "has-review": {
                "name": "has-review",
                "in": "query",
                "description": "Filter users that are author of at least 1 review (published or not).",
                "required": false,
                "schema": {
                    "type": "boolean",
                    "default": false
                }
            },
            "is-ghost": {
                "name": "is-ghost",
                "in": "query",
                "description": "Filter users that are ghosts.",
                "required": false,
                "schema": {
                    "type": "boolean",
                    "default": false
                }
            },
            "has-names": {
                "name": "has-names",
                "in": "query",
                "description": "Filter users depending if they have both first and last names.",
                "required": false,
                "schema": {
                    "type": "boolean",
                    "default": false
                }
            }
        }
    }
}